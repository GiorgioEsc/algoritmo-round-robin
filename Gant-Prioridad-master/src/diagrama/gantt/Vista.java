/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package diagrama.gantt;

import java.awt.Color;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import logica.ColaBloqueados;
import logica.ColaListos;
import logica.ColaTerminados;
import logica.Nodo;


/**
 *
 * @author Victoria
 */
public class Vista extends javax.swing.JFrame {

    ColaTerminados terminados;
    ColaListos listos;
    
    static int tiemposespera = 1;
    String cadena="";
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    DefaultTableModel modelo;
    DefaultTableModel modelo3;

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        textArea1 = new java.awt.TextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jLabel3.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tabla de Listos");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diagrama de Gantt");
        setBackground(new java.awt.Color(0, 153, 153));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tabla de Terminados");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(44, 95, 240, 25);

        jTable1.setFont(new java.awt.Font("Kristen ITC", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P", "TL", "Traf", "Prioridad", "TC", "TF", "TR", "TE"
            }
        ));
        jTable1.setToolTipText("");
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 138, 379, 122);

        jButton1.setFont(new java.awt.Font("Kristen ITC", 1, 14)); // NOI18N
        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(714, 17, 94, 37);

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        jTable3.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        jTable3.setForeground(new java.awt.Color(0, 0, 204));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso"
            }
        ));
        jTable3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable3.setFocusTraversalPolicyProvider(true);
        jTable3.setGridColor(new java.awt.Color(0, 0, 255));
        jTable3.setInheritsPopupMenu(true);
        jScrollPane3.setViewportView(jTable3);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(10, 405, 956, 369);

        textArea1.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        getContentPane().add(textArea1);
        textArea1.setBounds(714, 138, 298, 122);

        jLabel2.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Diagrama de Gantt");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(400, 11, 193, 44);

        jLabel4.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cola Bloqueados");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(446, 95, 244, 25);

        jLabel5.setFont(new java.awt.Font("Kristen ITC", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cola Listos");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(800, 95, 180, 25);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(434, 138, 242, 122);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public Vista() {
        
        this.terminados = new ColaTerminados();
        this.listos = new ColaListos(terminados);

        initComponents();
        
        jTable3.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        modelo = (DefaultTableModel) jTable1.getModel();

        modelo3 = (DefaultTableModel) jTable3.getModel();
        Color colorTablero = new Color(0, 29, 29);
        this.getContentPane().setBackground(colorTablero);

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //new JScrollPane(jTable3, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        for (int i = 0; i <= 200; i++) {
            modelo3.addColumn(i);
        }
        listos.enqueue(1, 0);
        listos.enqueue(2, 0);
        listos.enqueue(3, 0);
        Date comienzo = new Date();
        insertarlistos(comienzo);
        atenderlistos();
        atenderbloqueados();
        atenderterminados();

    }//GEN-LAST:event_jButton1ActionPerformed
    private int i = 3;

    public void insertarlistos(Date comienzo) {
        TimerTask insertar = new TimerTask() {

            public void run() {
                i++;

                listos.enqueue(i, diferenciasegundos(comienzo, new Date()));
                textArea1.setText(listos.Mostrar());

            }
        };

        Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
        long delay = 2000L; //retraso del hilo
        long period = 2000L; //período de retraso

        timer.scheduleAtFixedRate(insertar, delay, period);
       /**try {
            Thread.sleep(10000);
            insertar.cancel();
            Thread.sleep(10000);
        } catch (Exception e) {
        }**/

    }

    public void atenderlistos() {

        TimerTask atender = new TimerTask() {
            public void run() {

                Nodo aux = listos.dequeue();
                cadena +=listos.getBloqueados().Mostrar()+"\n";
                //cadena += aux.getNombre() + "\t\t" + aux.getTllegada() + "\t\t" + aux.getTrafaga() + "\t\t" + aux.getPrioridad() + "\t\t" + aux.getTcomienzo() + "\t\t" + aux.getTfinal() + "\t\t" + aux.getTretorno() + "\t\t" + aux.getTespera();
                //System.out.println(cadena);
                jTextArea1.setText(cadena);
            }
        };
        Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
        long delay = 5000L; //retraso del hilo
        long period = 5000L; //período de retraso
        timer.scheduleAtFixedRate(atender, delay, period);

    }

    public void atenderterminados() {
        TimerTask atender = new TimerTask() {
            public void run() {
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

                String cadena = "";
                //cadena+= aux.getNombre()+"\t\t"+aux.getTllegada()+"\t\t"+aux.getTrafaga()+"\t\t"+aux.getTcomienzo()+"\t\t"+aux.getTfinal()+"\t\t"+aux.getTretorno()+"\t\t"+aux.getTespera();
                System.out.println(cadena);
                if (!terminados.estaVacia()) {
                    Nodo aux = terminados.dequeue();
                    
                    modelo.addRow(new Object[]{aux.getNombre(), aux.getTllegadaAlterno(), aux.getTrafaga(), aux.getPrioridad(), aux.getTcomienzo(),
                        aux.getTfinal(), aux.getTretorno(), aux.getTespera()});
                    DefaultTableModel modelo3 = (DefaultTableModel) jTable3.getModel();
                    modelo3.addRow(new Object[]{});
                    int numFila = jTable3.getRowCount() - 1;
                    int inicio = aux.getTcomienzo() + 1;
                    int termina = aux.getTfinal();
                    int i;
                    int iespera = aux.getTllegadaAlterno() + 1;
                    int fespera = aux.getTcomienzo();
                    for (i =iespera; i <= fespera; i++) {
                        jTable3.setValueAt("-------------------", numFila, i);
                    }
                    for (i = inicio; i <=termina; i++) {
                        jTable3.setValueAt("X", numFila, i);
                    }
                    jTable3.setDefaultRenderer(Object.class, new CambiarColor());
                    jTable3.setValueAt(aux.getNombre(), numFila, 0);
                }

            }
        };
        Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
        long delay = 4000L; //retraso del hilo
        long period = 4000L; //período de retraso
        timer.scheduleAtFixedRate(atender, delay, period);
    }
    
    public void atenderbloqueados() {

        TimerTask atender = new TimerTask() {
            public void run() {
                listos.getBloqueados().dequeue();
                cadena += listos.getBloqueados().Mostrar()+"\n";
                Nodo aux;
                int i;
                jTextArea1.setText(cadena);
            }
        };
        Timer timer = new Timer("Timer"); //timer que programa la tarea para cada 5 segundos
        long delay = 8000L; //retraso del hilo
        long period = 8000L; //período de retraso
        timer.scheduleAtFixedRate(atender, delay, period);
    }

    public int diferenciasegundos(Date fechacomienzo, Date fechaactual) {
        int diferencia = (int) ((fechaactual.getTime() - fechacomienzo.getTime()) / 1000);
        return diferencia;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
                

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
